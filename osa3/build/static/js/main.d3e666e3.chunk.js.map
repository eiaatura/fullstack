{"version":3,"sources":["services/persons.js","components/Notification.js","components/PersonForm.js","components/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","style","color_green","content","PersonForm","props","onSubmit","addPerson","value","newName","onChange","changeName","newNumber","changeNumber","type","Filter","filter","onFilterChange","Persons","persons","onDelete","person","name","toUpperCase","includes","map","Number","number","onClick","App","useState","setNewName","setPersons","setNewNumber","setMessage","setFilter","useEffect","personService","allPersons","timer","setTimeout","clearInterval","event","target","preventDefault","length","personExists","window","confirm","oldPerson","find","p","updatedPerson","returnedPerson","updatePerson","newPerson","concat","deletedPerson","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3e666e3.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = (axios.get(baseUrl))\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = (axios.post(baseUrl, newObject))\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = (axios.put(`${baseUrl}/${id}`, newObject))\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove } ","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    \r\n    const style = {\r\n      \"color\": message.color_green ? \"green\" : \"red\",\r\n      \"background\": \"#D3D3D3\",\r\n      \"fontSize\": \"150%\",\r\n      \"borderStyle\": \"solid\",\r\n      \"borderRadius\": \"2px\",\r\n      \"padding\": \"5px\"\r\n    }\r\n    return (<div style={style}> {message.content} </div>)\r\n  }\r\n  \r\n  export default Notification","import React from 'react'\r\n\r\nconst PersonForm = (props) => (\r\n\r\n    <form onSubmit={props.addPerson}>\r\n      <div>\r\n        name: <input value={props.newName} onChange={props.changeName} />\r\n      </div>\r\n      <div>\r\n        number: <input value={props.newNumber} onChange={props.changeNumber} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n  \r\n  export default PersonForm","import React from \"react\"\r\n\r\nconst Filter = ({filter, onFilterChange}) => {\r\n    return (<p>filter shown with <input value={filter} onChange={onFilterChange}/></p>)\r\n}\r\n\r\nexport default Filter","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\n\nconst Persons = ({persons, filter, onDelete}) => {\n  const caseinsensitiveFilter = (person) => (\n    person.name.toUpperCase().includes(filter.toUpperCase())\n  )\n  return (\n    <div>\n      <h2>Numbers</h2>\n      {persons.filter(caseinsensitiveFilter).map(person => <Number key={person.name} person={person} onDelete={onDelete}/>)}\n    </div>\n  )\n}\n\nconst personExists = (persons, name) => {\n  return persons.filter(person => person.name === name).length > 0\n}\n\nconst Number = ({person, onDelete}) => (\n  <div>{person.name} {person.number} <button onClick={() => onDelete(person)}>delete</button></div>\n)\n\nconst App = () => {\n\n  const [ newName, setNewName ] = useState('')\n  const [ persons, setPersons] = useState([])\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ filter, setFilter ] = useState('')\n  const color_green = message === null ? null : message.color_green\n  const content = message === null ? null : message.content\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(allPersons =>\n        setPersons(allPersons)\n        )\n    }, [])\n\n  useEffect(() => {\n    const clearMessage = () => setMessage(null)\n    const timer = setTimeout(clearMessage, 5000)\n    return () => clearInterval(timer)\n  }, [content, color_green])\n\n  const filterUpdate = (event) => setFilter(event.target.value)\n  const changeName = (event) => setNewName(event.target.value)\n  const changeNumber = (event) => setNewNumber(event.target.value)\n  const updatePerson = (name) => {\n    const oldPerson = persons.find(p => p.name === name)\n    const updatedPerson = {...oldPerson, number: newNumber}\n    personService.update(updatedPerson.id, updatedPerson).then(returnedPerson => {\n        setPersons(persons.map(person => person.id !== oldPerson.id ? person: returnedPerson))\n        setMessage({content:`Updated ${updatedPerson.name}.`, color_green: true})\n        })\n    }\n\n  const createNewPerson = () => {\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    personService.create(newPerson).then(newPerson => {\n        setPersons(persons.concat(newPerson))\n        setMessage({content: `Added ${newPerson.name}`, color_green: true})\n      })\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const deletePerson = deletedPerson => {\n    const accepted = window.confirm(`Delete ${deletedPerson.name}?`)\n    if (accepted) {\n      personService.remove(deletedPerson.id).then(() => {\n          setPersons(persons.filter(person => person.id !== deletedPerson.id))\n          setMessage({content: `Deleted ${deletedPerson.name}`, color_green:false})\n        })\n        .catch(error => {\n          if (error.message === \"Request failed with status code 404\"){\n            setMessage({content: `Information of ${deletedPerson.name} has already been removed from server`, color_green: true})\n          } else {\n            setMessage({content: error.response.data.error, color_green: false})\n          }\n        })\n      }\n    }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    if (personExists(persons, newName)) {\n      const acceptModification = window.confirm(`${newName} is created already. Do you want to update it with new number?`)\n      if (acceptModification)\n        updatePerson(newName)\n    } \n    else\n      createNewPerson()\n  }\n\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message}/>\n      <Filter filter={filter} onFilterChange={filterUpdate}/>\n      <h2>Add a new</h2>\n      <PersonForm\n        addPerson={addPerson}\n        changeName={changeName}\n        changeNumber={changeNumber}\n        newName={newName}\n        newNumber={newNumber}\n      />\n      <Persons persons={persons} filter={filter} onDelete={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}